#%% This script create part of Fig 10import pandas as pdimport matplotlib.pyplot as pltimport numpy as np# Load the datasetdf = pd.read_csv("data_raw/county_1999_2024_myCrude.csv")# Rename the "Year Code" column to "Year" for claritydf.rename(columns={"Year Code": "Year"}, inplace=True)df = df.replace('Shannon County, SD', 'Oglala Lakota County, SD')# Select the years of interestyears = [1999, 2009, 2019, 2021, 2024]# Initialize dictionary to store top counties for each yeartop_counties = {year: df[df['Year'] == year].nlargest(3, 'Crude Rate') for year in years}# Extract top crude rates and county names for each yearcrude_rates = {year: top_counties[year]['Crude Rate'].values for year in years}county_names = {year: top_counties[year]['County'].values.tolist() for year in years}  # Ensure list format# Set up the bar plot with transparency and adjusted annotationsfig, ax = plt.subplots(figsize=(7, 3), tight_layout=True)bar_width = 0.15  # Adjusted width for spacingspacing = 0.05  # Space between bars within each yearx = np.arange(len(years))  # X positions for years# Colors for each yearyear_colors = ['tab:red', 'tab:green', 'tab:orange', 'tab:blue', 'tab:brown']alpha_value = 0.7  # Transparency level# Plot bars with adjusted spacing and transparencyfor j, year in enumerate(years):    for i in range(3):        if i < len(crude_rates[year]):            ax.bar(x[j] + (i - 1) * (bar_width + spacing), crude_rates[year][i],                   bar_width, label=f"{year}" if i == 0 else "", color=year_colors[j], alpha=alpha_value)# Define y-tick labelsmajor_yticks = list(range(0, 351, 50))  # Major yticks with labelsminor_yticks = [y for y in range(0, 351, 10) if y not in major_yticks]  # Minor yticks without labels# Set y-ticks with longer whiskers for major ticks and shorter whiskers for minor ticksax.set_yticks(major_yticks)ax.set_yticklabels(major_yticks, fontsize=12)ax.set_yticks(minor_yticks, minor=True)ax.set_ylim([0, 375])# Customize tick appearanceax.tick_params(axis='y', which='major', length=8)  # Longer whiskers for major ticksax.tick_params(axis='y', which='minor', length=4)  # Shorter whiskers for minor ticks# Add labelsax.set_xticks(x)ax.set_xticklabels(years, fontsize=12)ax.set_xlabel("Year", fontsize=12)ax.set_ylabel("Crude Rate", fontsize=12)# ax.set_title("Top 3 Counties with Highest Crude Rates (1999, 2009, 2019, 2021, 2024)")# Annotate bars with county names, adjusting alignment and spacingfor j, year in enumerate(years):    for i in range(3):        if i < len(crude_rates[year]):            xpos = x[j] + (i - 1) * (bar_width + spacing)            ypos = crude_rates[year][i]            if year == 2021:                # Center text within the bar for 2021 without the box                ax.text(xpos, ypos / 2, county_names[year][i], ha='center', va='center',                         fontsize=8, rotation=90, color='white')            else:                # Position text above the bar with extra vertical spacing for better readability                ax.text(xpos, ypos + 5, county_names[year][i], ha='center', va='bottom',                         fontsize=8, rotation=90, color='black')plt.grid(visible=True, alpha = 0.2)plt.savefig('top_histogram.pdf')# plt.savefig('top_histogram.tiff', dpi=400, format="tiff", pil_kwargs={"compression": "tiff_lzw"})