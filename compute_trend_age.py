import pandas as pdimport numpy as npimport Rbeast as rbimport picklefile_generated_path = "data_generated/age2/"age_group_list = ['15-34', '35-44', '45-54', '55-64', '65-74', '75+']#%% Looping over age group for maledf_pop = pd.read_csv("data_raw/population_age_2018_2024_male.csv")for age_group in age_group_list:    if age_group == "15-34":        df = pd.read_csv("data_raw/age_15-34_2018_2024.txt", sep="\t")        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[df["Gender"] == "Male"]["Deaths"].astype(float).to_numpy()    elif age_group == "75+":        df = pd.read_csv("data_raw/age_75+_2018_2024.txt", sep="\t")        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[df["Gender"] == "Male"]["Deaths"].astype(float).to_numpy()    else:        df = pd.read_csv("data_raw/age_35-74_2018_2024.txt", sep="\t")        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[(df["Gender"] == "Male") & (df["Ten-Year Age Groups Code"] == age_group)]["Deaths"].astype(float).to_numpy()     pop = df_pop[age_group + " years"].astype(float).to_numpy()    cr = (deaths / pop) * 1e5    o = rb.beast(cr, start=2018, deltat=1./12., season="harmonic", period=1., \                 mcmc_samples=100000, mcmc_chains=10)    filename = file_generated_path + age_group + '_Male.pkl'    with open(filename, "wb") as inp:        pickle.dump(o, inp)            #%% Looping over age group for femaledf_pop = pd.read_csv("data_raw/population_age_2018_2024_female.csv")for age_group in age_group_list:    if age_group == "15-34":        df = pd.read_csv("data_raw/age_15-34_2018_2024.txt", sep="\t")        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[df["Gender"] == "Female"]["Deaths"].astype(float).to_numpy()    elif age_group == "75+":        df = pd.read_csv("data_raw/age_75+_2018_2024.txt", sep="\t")        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[df["Gender"] == "Female"]["Deaths"].astype(float).to_numpy()    else:        df = pd.read_csv("data_raw/age_35-74_2018_2024.txt", sep="\t")        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[(df["Gender"] == "Female") & \                    (df["Ten-Year Age Groups Code"] == age_group)]["Deaths"].astype(float).to_numpy()    pop = df_pop[age_group + " years"].astype(float).to_numpy()    cr = (deaths / pop) * 1e5    o = rb.beast(cr, start=2018, deltat=1./12., season="harmonic", period=1., \                 mcmc_samples=100000, mcmc_chains=10)    filename = file_generated_path + age_group + '_Female.pkl'    with open(filename, "wb") as inp:        pickle.dump(o, inp)        