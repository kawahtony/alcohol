#%% This script creates Fig 5## Import packagesimport numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport picklefrom scipy.interpolate import CubicSplinefrom helper_functions import round_up_month## Global plot settingplt.rcParams['axes.titley'] = 1.0# plt.rcParams['axes.titlepad'] = -15  # pad is in points...plt.rc('ytick', labelsize=15)#%% Helper functiondef plot_tcp(o, ax, cl):    num_cp = int(o.trend.ncp_median[0])    cp_set = o.trend.cp[:num_cp]    cpCI_l_set = o.trend.cpCI[:num_cp,0]    cpCI_r_set = o.trend.cpCI[:num_cp,1]    cpAbruptChange_set = o.trend.cpAbruptChange[:num_cp]    idx = np.argsort(cp_set)    cp_set, cpCI_l_set, cpCI_r_set, cpAbruptChange_set = cp_set[idx], cpCI_l_set[idx], \                                                         cpCI_r_set[idx], cpAbruptChange_set[idx]    for k in range(num_cp):             cp = cp_set[k]        # Get the index of the month before cp        idx_previous = np.argmin(abs(o.time - cp)) - 1        # Trend value at and before cp        Y = o.trend.Y[idx_previous + 1]        Y_previous = o.trend.Y[idx_previous]        if np.abs(cpAbruptChange_set[k]) > 0.05 and np.abs(cpAbruptChange_set[k]/Y_previous) > 0.05:            ax.plot(cp_set[k], Y, 's', markersize=8, color=cl)    return None#%% Pre-looprace_list = ["AIAN", "Asian", "Black", "Hispanic", "Mixed race", "White"]race_to_abbrev = {"AIAN" : "AIAN",                  "Asian" : "asian",                  "Black" : "black",                  "Hispanic" : "hispanic",                  "Mixed race" : "mixed",                  "White" : "white"}fig, axs = plt.subplots(nrows=2, ncols=3, figsize=(15,6), dpi=400, tight_layout=True)axs = np.array(axs)count = 0 fs = 14 # fig.delaxes(axs[1][2])#%% Version 1 : Do not show CI of tcp locationfor ax in fig.axes:        race = race_list[count]    filename = 'data_generated/race/' + race_to_abbrev[race] + '_Male.pkl'    with open(filename, 'rb') as inp:        o_male = pickle.load(inp)    ax.plot(o_male.time, o_male.data, 'bo', markersize=2, alpha=0.2)    ax.fill_between(o_male.time, o_male.trend.CI[:,1], o_male.trend.CI[:,0], color='b', alpha=0.2)    ax.plot(o_male.time, o_male.trend.Y, 'b-', linewidth=2, label="Males")        filename = 'data_generated/race/' + race_to_abbrev[race] + '_Female.pkl'    with open(filename, 'rb') as inp:        o_female = pickle.load(inp)    ax.plot(o_female.time, o_female.data, 'ro', markersize=2, alpha=0.2)    ax.fill_between(o_female.time, o_female.trend.CI[:,1], o_female.trend.CI[:,0], color='r', alpha=0.2)    ax.plot(o_female.time, o_female.trend.Y, 'r-', linewidth=2, label="Females")                    if np.isnan(o_male.trend.ncp_median[0]) == False:        num_cp = int(o_male.trend.ncp_median[0])        if num_cp > 0:            plot_tcp(o_male, ax, "b")            if np.isnan(o_female.trend.ncp_median[0]) == False:        num_cp = int(o_female.trend.ncp_median[0])        if num_cp > 0:            plot_tcp(o_female, ax, "r")                        # Plot: xlim, xtick,     ax.set_xlim([2018, 2025])    x_ticklabels = ["'18", "'19", "'20", "'21", "'22", "'23", "'24", "'25"]    x_tick = np.arange(2018, 2026)    ax.set_xticks(x_tick, x_ticklabels, fontsize=fs)    # Plot: ylim, ytick    if race == "AIAN":        ax.set_ylim([-1, 13])        yticks = np.arange(0, 13, 4)               ytick_labels = ['0', '4', '8', '12']        ax.set_yticks(yticks, ytick_labels, fontsize=fs)        ax.legend(frameon=False, fontsize=fs, loc="upper left", bbox_to_anchor=(-0.02,1.05))        ax.set_ylabel('Monthly Crude Rate', fontsize=fs)                            elif race == "Asian":        ax.set_ylim([-0.05, 0.65])            yticks = np.arange(0, 0.65, 0.2)        ytick_labels = ['0', '0.2', '0.4', '0.6']        ax.set_yticks(yticks, ytick_labels, fontsize=fs)        ax.legend(frameon=False, fontsize=fs, loc="upper left", bbox_to_anchor=(0.5,0.6))                    elif race == "Black":        ax.set_ylim([-0.15, 1.7])            yticks = np.arange(0., 1.6, 0.5)        ytick_labels = ['0', '0.5', '1', '1.5']        ax.set_yticks(yticks, ytick_labels, fontsize=fs)        ax.legend(frameon=False, fontsize=fs, loc="upper left", bbox_to_anchor=(0.6,0.33))            elif race == "Hispanic":        ax.set_ylim([-0.15, 1.95])            yticks = np.arange(0., 2, 0.6)        ytick_labels = ['0', '0.6', '1.2', '1.8']        ax.set_yticks(yticks, ytick_labels, fontsize=fs)        ax.legend(frameon=False, fontsize=fs, loc="center right", bbox_to_anchor=(1,0.45))        ax.set_xlabel('Year', fontsize=fs)        ax.set_ylabel('Monthly Crude Rate', fontsize=fs)            elif race == "Mixed race":        ax.set_ylim([-0.05, 0.8])            yticks = np.arange(0, 0.8, 0.25)        ytick_labels = ['0', '0.25', '0.5', '0.75']        ax.set_yticks(yticks, ytick_labels, fontsize=fs)        ax.set_xlabel('Year', fontsize=fs)        ax.legend(frameon=False, fontsize=fs, loc="upper left", bbox_to_anchor=(-0.02,1.04))            elif race == "White":        # ax.set_ylim([-0.1, 3.1])            # yticks = np.arange(0, 3.1, 1)        # ytick_labels = ['0', '1', '2', '3']        ax.set_ylim([-0.2, 2.9])            yticks = np.arange(0, 2.8, 0.9)        ytick_labels = ['0', '0.9', '1.8', '2.7']        ax.set_yticks(yticks, ytick_labels, fontsize=fs)        ax.set_xlabel('Year', fontsize=fs)        ax.legend(frameon=False, fontsize=fs, loc="center right", bbox_to_anchor=(0.9, 0.53))            # Plot: title, grid, legend    ax.set_title(race, fontsize=fs, loc='left')    ax.grid(visible=True, alpha=0.3)        count += 1             # plt.savefig('figures/race.pdf')fig.savefig('Fig6.tiff', dpi=400, format="tiff", pil_kwargs={"compression": "tiff_lzw"})