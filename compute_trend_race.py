import pandas as pdimport numpy as npimport Rbeast as rbimport picklefile_raw_path = "data_raw/"file_generated_path = "data_generated/race2/"race_list = ["AIAN", "Asian", "Black", "Hispanic", "Mixed", "White"]race_to_abbrev = {"AIAN" : "AIAN",                  "Asian" : "asian",                  "Black" : "black",                  "Hispanic" : "hispanic",                  "Mixed" : "mixed",                  "White" : "white"}#%% Looping over age group for maledf_pop = pd.read_csv("data_raw/population_race_2018_2024_Male.csv")for race in race_list:        if race == "AIAN":        df = pd.read_csv(file_raw_path + "nonhispanic.txt", sep='\t')        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[(df["Gender"] == "Male") & \                    (df["Single Race 6"] == "American Indian or Alaska Native")]["Deaths"].astype(float).to_numpy()    elif race == "Asian":        df = pd.read_csv(file_raw_path + "nonhispanic.txt", sep='\t')        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[(df["Gender"] == "Male") & \                    (df["Single Race 6"] == "Asian")]["Deaths"].astype(float).to_numpy()    elif race == "Black":        df = pd.read_csv(file_raw_path + "nonhispanic.txt", sep='\t')        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[(df["Gender"] == "Male") & \                    (df["Single Race 6"] == "Black or African American")]["Deaths"].astype(float).to_numpy()    elif race == "Hispanic":        df = pd.read_csv(file_raw_path + "hispanic.txt", sep='\t')        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[df["Gender"] == "Male"]["Deaths"].astype(float).to_numpy()    elif race == "Mixed":        df = pd.read_csv(file_raw_path + "nonhispanic.txt", sep='\t')        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[(df["Gender"] == "Male") & \                    (df["Single Race 6"] == "More than one race")]["Deaths"].astype(float).to_numpy()    elif race == "White":        df = pd.read_csv(file_raw_path + "nonhispanic.txt", sep='\t')        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[(df["Gender"] == "Male") & \                    (df["Single Race 6"] == "White")]["Deaths"].astype(float).to_numpy()      pop = df_pop[race].astype(float).to_numpy()    cr = (deaths / pop) * 1e5    o = rb.beast(cr, start=2018, deltat=1./12., season="harmonic", period=1., mcmc_chains=10, mcmc_samples=1e5)    filename = file_generated_path + race_to_abbrev[race] + '_Male.pkl'    with open(filename, "wb") as inp:        pickle.dump(o, inp)        #%% Looping over age group for femaledf_pop = pd.read_csv("data_raw/population_race_2018_2024_Female.csv")for race in race_list:        if race == "AIAN":        df = pd.read_csv(file_raw_path + "nonhispanic.txt", sep='\t')        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[(df["Gender"] == "Female") & \                    (df["Single Race 6"] == "American Indian or Alaska Native")]["Deaths"].astype(float).to_numpy()    elif race == "Asian":        df = pd.read_csv(file_raw_path + "nonhispanic.txt", sep='\t')        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[(df["Gender"] == "Female") & \                    (df["Single Race 6"] == "Asian")]["Deaths"].astype(float).to_numpy()    elif race == "Black":        df = pd.read_csv(file_raw_path + "nonhispanic.txt", sep='\t')        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[(df["Gender"] == "Female") & \                    (df["Single Race 6"] == "Black or African American")]["Deaths"].astype(float).to_numpy()    elif race == "Hispanic":        df = pd.read_csv(file_raw_path + "hispanic.txt", sep='\t')        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[df["Gender"] == "Female"]["Deaths"].astype(float).to_numpy()    elif race == "Mixed":        df = pd.read_csv(file_raw_path + "nonhispanic.txt", sep='\t')        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[(df["Gender"] == "Female") & \                    (df["Single Race 6"] == "More than one race")]["Deaths"].astype(float).to_numpy()    elif race == "White":        df = pd.read_csv(file_raw_path + "nonhispanic.txt", sep='\t')        df = df.replace("Unreliable", np.nan)        df = df.replace("Suppressed", np.nan)        deaths = df[(df["Gender"] == "Female") & \                    (df["Single Race 6"] == "White")]["Deaths"].astype(float).to_numpy()      pop = df_pop[race].astype(float).to_numpy()    cr = (deaths / pop) * 1e5    o = rb.beast(cr, start=2018, deltat=1./12., season="harmonic", period=1., mcmc_chains=10, mcmc_samples=1e5)    filename = file_generated_path + race_to_abbrev[race] + '_Female.pkl'    with open(filename, "wb") as inp:        pickle.dump(o, inp)        